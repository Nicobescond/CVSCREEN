import streamlit as st
import os
import groq
import PyPDF2
import pandas as pd
from pathlib import Path
import json

st.set_page_config(page_title="Analyse CV Auditeurs", layout="wide")

st.title("ðŸ“„ Analyse automatique de CV â€“ Auditeurs")

# --- Ã‰tape 1 : ClÃ© API utilisateur ---
api_key = st.text_input("ðŸ”‘ Veuillez saisir votre clÃ© API Groq :", type="password")

if not api_key:
    st.warning("Merci d'entrer une clÃ© API valide pour continuer.")
    st.stop()

client = groq.Client(api_key=api_key)

# --- Ã‰tape 2 : Chargement des rÃ©fÃ©rentiels ---
def load_referentials():
    referentials = {}
    folder = Path("referentiels")
    if folder.exists():
        for file in folder.glob("*.json"):
            with open(file, "r", encoding="utf-8") as f:
                referentials[file.stem] = json.load(f)
    return referentials

referentials = load_referentials()
selected_schema = st.selectbox("ðŸ“š Choisissez un rÃ©fÃ©rentiel Ã  utiliser :", list(referentials.keys()))

# --- Ã‰tape 3 : Upload du CV ---
uploaded_file = st.file_uploader("ðŸ“¤ Uploadez un CV (PDF uniquement)", type=["pdf"])

if uploaded_file and selected_schema:
    pdf_reader = PyPDF2.PdfReader(uploaded_file)
    text = ""
    for page in pdf_reader.pages:
        text += page.extract_text()

    prompt = f"""
Tu es un assistant qui vÃ©rifie si un CV est conforme aux exigences du rÃ©fÃ©rentiel suivant :
{json.dumps(referentials[selected_schema], indent=2)}

Voici le contenu du CV Ã  analyser :
{text}

Retourne un JSON indiquant pour chaque exigence si elle est remplie ou non, avec un score de confiance, et une synthÃ¨se globale du profil.
"""

    with st.spinner("Analyse en cours avec Groq..."):
        try:
            response = client.chat.completions.create(
                model="llama3-8b-8192",
                messages=[{"role": "user", "content": prompt}]
            )
            result = response.choices[0].message.content
            st.subheader("âœ… RÃ©sultat de l'analyse")
            st.code(result, language="json")
        except Exception as e:
            st.error(f"Erreur pendant l'appel Ã  l'API : {e}")
